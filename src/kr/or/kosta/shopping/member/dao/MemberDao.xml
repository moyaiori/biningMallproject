<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
                        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 네임스페이스(사용영역) 설정 -->
<mapper namespace="kr.or.kosta.shopping.member.dao.MemberDao">
	
	<!-- 전체회원 조회를 위한 SQL 매핑 -->
	<select id="getAll" resultType="kr.or.kosta.shopping.member.domain.Member" >
		SELECT member_id AS "memberId", passwd AS "passwd", birth AS "birth", phone_number AS "phoneNumber", address AS "address", address2 AS "address2", name AS "name", email AS "email", grade AS "grade", point AS "point"
		FROM members
	</select>
		
	<!-- 회원 등록 -->
	<insert id="insert" parameterType="kr.or.kosta.shopping.member.domain.Member">
		INSERT INTO members(member_id, passwd, birth, phone_number, phone_number2, phone_number3, address, address2, name, email, grade, gender)
		VALUES(#{memberId}, #{passwd}, #{birth}, #{phoneNumber}, #{phoneNumber2}, #{phoneNumber3}, #{address}, #{address2}, #{name}, #{email}, '일반', #{gender})
	</insert>
	
	<!-- 회원 정보 수정(JSTL set, if 태그를 이용한 동적 SQL) -->
	<!-- 추후 추가
	<update id="update" parameterType="kr.or.kosta.employee.domain.Employee">
		UPDATE employees
		<set>
	        <if test="firstName != null">first_name = #{firstName},</if>
	        <if test="lastName != null">last_name = #{lastName},</if>
	        <if test="salary != null">salary = #{salary},</if>
	        <if test="email != null">email = #{email},</if>
	    </set>
	    WHERE employee_id = #{id}
	</update>
	-->
	
	<!-- 회원 삭제 -->
	<delete id="delete" parameterType="java.lang.Integer">
		DELETE FROM employees
		WHERE employee_id = #{value}
	</delete>
	
	<!-- isMember 추가(email로 검색) -->
	
	<!-- login 추가(id, passwd) -->
	<select id="login" resultType="kr.or.kosta.shopping.member.domain.Member" parameterType="java.util.HashMap">
		 SELECT member_id AS "memberId", passwd AS "passwd", birth AS "birth", phone_number AS "phoneNumber", address AS "address", address2 AS "address2", name AS "name", email AS "email", grade AS "grade", point AS "point"  
		 FROM members
		 WHERE member_id = #{memberId} AND passwd = #{passwd}
	</select>	
	
	<!-- login 아이디 중복 검사  -->
	<select id="idChk" resultType="kr.or.kosta.shopping.member.domain.Member" parameterType="java.lang.String">
		  select member_id AS "memberId", passwd AS "passwd", birth AS "birth", phone_number AS "phoneNumber", address AS "address", address2 AS "address2", name AS "name", email AS "email", grade AS "grade", point AS "point"   
		  from members where member_id =#{value}
	</select>
		
	<!-- login 이메일 중복 검사  -->
	<select id="emailChk" resultType="kr.or.kosta.shopping.member.domain.Member" parameterType="java.lang.String">
		  select member_id AS "memberId", passwd AS "passwd", birth AS "birth", phone_number AS "phoneNumber", address AS "address", address2 AS "address2", name AS "name", email AS "email", grade AS "grade", point AS "point"   
		  from members where email =#{value}
	</select>
	
	<select id="searchId" resultType="kr.or.kosta.shopping.member.domain.Member" parameterType="java.util.HashMap">
		  SELECT  member_id AS "memberId", passwd AS "passwd", birth AS "birth", phone_number AS "phoneNumber", address AS "address", address2 AS "address2", name AS "name", email AS "email", grade AS "grade", point AS "point"
		  FROM members
		  WHERE name = #{name} AND email = #{email}
	</select>
	
	<select id="searchPass" resultType="kr.or.kosta.shopping.member.domain.Member" parameterType="java.util.HashMap">
		  SELECT  member_id AS "memberId", passwd AS "passwd", birth AS "birth", phone_number AS "phoneNumber", address AS "address", address2 AS "address2", name AS "name", email AS "email", grade AS "grade", point AS "point"
		  FROM members
		  WHERE member_id = #{id} AND email = #{email}
	</select>
	
	<select id="getMemberInfo" resultType="kr.or.kosta.shopping.member.domain.Member" parameterType="String">
		  SELECT  member_id AS "memberId", passwd AS "passwd", TO_CHAR(birth,'YYYY/MM/DD') AS "birth", phone_number AS "phoneNumber",phone_number2 AS "phoneNumber2",phone_number3 AS "phoneNumber3", address AS "address", address2 AS "address2", name AS "name", email AS "email", grade AS "grade", point AS "point"
		  FROM members
		  WHERE member_id = #{value}
	</select>
	
	<update id="updateMemberInfo" parameterType="kr.or.kosta.shopping.member.domain.Member">
			UPDATE members SET
			name = #{name}, 
			passwd = #{passwd}, 
			email = #{email}, 
			PHONE_NUMBER = #{phoneNumber}, 
			PHONE_NUMBER2 = #{phoneNumber2}, 
			PHONE_NUMBER3 = #{phoneNumber3}, 
			address = #{address}, 
			address2 = #{address2}
			WHERE member_id = #{memberId}
	</update>
	
	<update id="updatePoint" parameterType="java.util.HashMap">
		UPDATE members
		SET point = #{point}
		WHERE member_id = #{memberId}
	</update>
	
	<select id="getMemberPoint" parameterType="java.lang.String" resultType="java.lang.Integer">
		select point as "point"
		from	members
		where	member_Id = #{memberId}
	</select>
	
</mapper>